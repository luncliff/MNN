if(CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(X86_64)|(x64)|(X64)|(amd64)|(AMD64)|(i686)")
    if(APPLE)
        add_compile_options(-fno-stack-check) # Workaround a Xcode 11.X bug
    endif()
    message(STATUS "${CMAKE_SYSTEM_PROCESSOR}: Open SSE")
    FILE(GLOB MNN_X8664_SRC ${CMAKE_CURRENT_SOURCE_DIR}/*)
    if(MSVC)
        FILE(GLOB MNN_AVX_SRC ${CMAKE_CURRENT_SOURCE_DIR}/avx/*.cpp)
        FILE(GLOB MNN_AVXFMA_SRC ${CMAKE_CURRENT_SOURCE_DIR}/avxfma/*.cpp)
    else()
        FILE(GLOB MNN_AVX_SRC ${CMAKE_CURRENT_SOURCE_DIR}/avx/*)
        FILE(GLOB MNN_AVXFMA_SRC ${CMAKE_CURRENT_SOURCE_DIR}/avxfma/*)
        if(MNN_AVX512)
            FILE(GLOB MNN_AVX512_SRC ${CMAKE_CURRENT_SOURCE_DIR}/avx512/*)
            add_library(MNNAVX512 STATIC ${MNN_AVX512_SRC})
            target_compile_options(MNNAVX512 PRIVATE -m64 -mavx512f -mavx512dq -mavx512vl -mavx512bw -mfma -mavx512vnni)
            target_compile_definitions(MNNAVX512 PRIVATE MNN_X86_USE_ASM)
            target_link_libraries(MNNAVX512 PUBLIC MNNCore)
            install(TARGETS MNNAVX512
                EXPORT MNNConfig
                RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib
            )
        endif()
    endif()
    FILE(GLOB MNN_SSE_SRC ${CMAKE_CURRENT_SOURCE_DIR}/sse/*)
    add_library(MNNX8664 STATIC ${MNN_X8664_SRC})
    target_link_libraries(MNNX8664 PRIVATE MNNCore)
    target_compile_definitions(MNNX8664 PUBLIC MNN_USE_SSE)

    add_library(MNNAVX STATIC ${MNN_AVX_SRC})
    target_link_libraries(MNNAVX PRIVATE MNNCore)
    target_compile_definitions(MNNAVX PUBLIC MNN_USE_SSE)
    
    add_library(MNNAVXFMA STATIC ${MNN_AVXFMA_SRC})
    target_link_libraries(MNNAVXFMA PRIVATE MNNCore)
    target_compile_definitions(MNNAVXFMA PUBLIC MNN_USE_SSE)

    add_library(MNNSSE STATIC ${MNN_SSE_SRC})
    target_link_libraries(MNNSSE PRIVATE MNNCore)
    target_compile_definitions(MNNSSE PUBLIC MNN_USE_SSE)

    if(MSVC)
        target_compile_options(MNNAVX PRIVATE /arch:AVX)
        target_compile_options(MNNAVXFMA PRIVATE /arch:AVX)
    else()
        target_compile_options(MNNSSE PRIVATE -msse4.1)
        target_compile_options(MNNAVX PRIVATE -mavx2 -DMNN_X86_USE_ASM)
        target_compile_options(MNNAVXFMA PRIVATE -mavx2 -mfma -DMNN_X86_USE_ASM)
    endif()
    if(MNN_SUPPORT_BF16)
        target_compile_definitions(MNNAVXFMA PUBLIC MNN_SUPPORT_BF16)
        if(MNN_SSE_USE_FP16_INSTEAD)
            target_compile_definitions(MNNAVXFMA PUBLIC MNN_SSE_USE_FP16_INSTEAD)
            target_compile_options(MNNAVXFMA PRIVATE -mf16c)
        endif()
    endif()
    if(MNN_AVX512)
        target_compile_definitions(MNNX8664 PUBLIC MNN_AVX512)
    endif()

    install(TARGETS MNNX8664 MNNAVX MNNAVXFMA MNNSSE
        EXPORT MNNConfig
        RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib
    )
endif()
